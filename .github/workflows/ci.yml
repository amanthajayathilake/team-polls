name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: team_polls_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      
      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Run tests
      working-directory: ./backend
      env:
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USER: postgres
        DB_PASSWORD: postgres
        DB_NAME: team_polls
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        JWT_SECRET: test-secret
      run: npm test
    
    - name: Build Docker images
      run: |
        docker build -t team-polls-backend ./backend
        docker build -t team-polls-frontend ./frontend
    
    - name: Generate test coverage badge
      working-directory: ./backend
      run: npm test -- --coverage --coverageReporters=json-summary
    
    - name: Show test coverage summary
      working-directory: ./backend
      run: |
        echo "Test Coverage Summary:"
        cat coverage/coverage-summary.json | jq .total.statements.pct
